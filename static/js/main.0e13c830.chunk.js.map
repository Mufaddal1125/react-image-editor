{"version":3,"sources":["Slider.js","SideBar.js","SetImage.js","URLImage.js","App.js","index.js"],"names":["Slider","_ref","min","max","value","handleChange","step","_jsx","className","children","onChange","type","SideBar","name","active","handleClick","concat","onClick","SetImage","onset","_useState","useState","_useState2","_slicedToArray","url","setUrl","_jsxs","style","height","event","target","placeholder","URLImage","props","URL","src","_useImage","useImage","image","imageRef","React","useRef","useEffect","current","cache","getLayer","batchDraw","Image","ref","x","y","filters","Konva","Filters","HSL","Pixelate","Blur","Brighten","Contrast","Posterize","Noise","blurRadius","luminance","noise","pixelSize","pixel","brightness","contrast","levels","posterize","DEFAULT_OPTIONS","property","range","unit","App","selectedOptionsIndex","setSelectedOptionsIndex","_useState3","_useState4","options","setOptions","selectedOption","_useState5","window","innerHeight","_useState6","setSrc","stageRef","Stage","width","innerWidth","Layer","map","option","index","uri","link","document","createElement","download","href","body","appendChild","click","removeChild","downloadURI","toDataURL","prevOptions","_objectSpread","ReactDOM","render","StrictMode","getElementById"],"mappings":"kNAEe,SAASA,EAAMC,GAAyC,IAAvCC,EAAGD,EAAHC,IAAKC,EAAGF,EAAHE,IAAKC,EAAKH,EAALG,MAAOC,EAAYJ,EAAZI,aAAcC,EAAIL,EAAJK,KAC3D,OACIC,cAAA,OAAKC,UAAU,mBAAkBC,SAC7BF,cAAA,SAAOD,KAAMA,EAAMJ,IAAKA,EAAKC,IAAKA,EAAKC,MAAOA,EAAOM,SAAUL,EAAcM,KAAK,WAG9F,CCNe,SAASC,EAAOX,GAA+B,IAA7BY,EAAIZ,EAAJY,KAAMC,EAAMb,EAANa,OAAQC,EAAWd,EAAXc,YAC3C,OACIR,cAAA,UAAQC,UAAS,gBAAAQ,OAAkBF,EAAS,SAAW,IAAMG,QAASF,EAAYN,SAAEI,GAE5F,CCJe,SAASK,EAAQjB,GAAW,IAATkB,EAAKlB,EAALkB,MAE9BC,EAAsBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA3BI,EAAGF,EAAA,GAAEG,EAAMH,EAAA,GAElB,OACII,eAAA,OAAKlB,UAAU,YAAYmB,MAAO,CAACC,OAAQ,QAAQnB,SAAA,CAC/CF,cAAA,MAAAE,SAAI,eACJF,cAAA,SAAOI,KAAK,MAAMH,UAAU,gBAAgBE,SAAU,SAACmB,GAAK,OAAKJ,EAAOI,EAAMC,OAAO1B,MAAM,EAAE2B,YAAY,yBACzGxB,cAAA,UAAQC,UAAU,mBAAmBS,QAAS,kBAAME,EAAMK,EAAI,EAACf,SAAC,gBAG5E,C,6CC0EeuB,EApCE,SAACC,GAChB,IAAMC,EAAMD,EAAME,IAClBC,EAAgBC,IAASH,EAAK,YAAvBI,EAAkCf,YAAAa,EAAA,GAA7B,GACNG,EAAWC,IAAMC,SAavB,OAVAD,IAAME,WAAU,WACVJ,IAEFC,EAASI,QAAQC,QAGjBL,EAASI,QAAQE,WAAWC,YAEhC,GAAG,CAACR,IAGF/B,cAACwC,QAAK,CACJC,IAAKT,EACLU,EAAG,GACHC,EAAG,GACHZ,MAAOA,EACPa,QAAS,CAACC,IAAMC,QAAQC,IAAKF,IAAMC,QAAQE,SAAUH,IAAMC,QAAQG,KAAMJ,IAAMC,QAAQI,SAAUL,IAAMC,QAAQK,SAAUN,IAAMC,QAAQM,UAAWP,IAAMC,QAAQO,OAChKC,WAAY5B,EAAMuB,KAClBM,UAAW7B,EAAM6B,UACjBC,MAAO9B,EAAM8B,MACbC,UAAW/B,EAAMgC,MACjBC,WAAYjC,EAAMiC,WAClBC,SAAUlC,EAAMkC,SAChBC,OAAQnC,EAAMoC,WAIpB,EC3EMC,EAAkB,CACpB,CACIzD,KAAM,aACN0D,SAAU,aACVnE,MAAO,EACPoE,MAAO,CACHtE,IAAK,EACLC,IAAK,GAETsE,KAAM,IACNnE,KAAM,IAEV,CACIO,KAAM,WACN0D,SAAU,WACVnE,MAAO,GACPoE,MAAO,CACHtE,KAAM,GACNC,IAAK,IAETsE,KAAM,IACNnE,KAAM,IAEV,CACIO,KAAM,WACN0D,SAAU,QACVnE,MAAO,GACPoE,MAAO,CACHtE,IAAK,GACLC,IAAK,IAETsE,KAAM,IACNnE,KAAM,IAGV,CACIO,KAAM,YACN0D,SAAU,YACVnE,MAAO,EACPoE,MAAO,CACHtE,KAAM,EACNC,IAAK,GAETsE,KAAM,IACNnE,KAAM,IAGV,CACIO,KAAM,YACN0D,SAAU,YACVnE,MAAO,GACPoE,MAAO,CACHtE,IAAK,EACLC,IAAK,IAETsE,KAAM,IACNnE,KAAM,KAEV,CACIO,KAAM,QACN0D,SAAU,QACVnE,MAAO,EACPoE,MAAO,CACHtE,IAAK,EACLC,IAAK,GAETsE,KAAM,MACNnE,KAAM,IAEV,CACIO,KAAM,OACN0D,SAAU,OACVnE,MAAO,EACPoE,MAAO,CACHtE,IAAK,EACLC,IAAK,IAETsE,KAAM,KACNnE,KAAM,IAiGCoE,MA5Ff,WACI,IAAAtD,EAAwDC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAA5DuD,EAAoBrD,EAAA,GAAEsD,EAAuBtD,EAAA,GACpDuD,EAA8BxD,mBAASiD,GAAgBQ,EAAAvD,YAAAsD,EAAA,GAAhDE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBG,EAAiBF,EAAQJ,GAC/BO,EAAsB7D,mBAAS,yBAADL,OAA0B,KAAI,IAAImE,OAAOC,cAAcC,EAAA9D,YAAA2D,EAAA,GAA9E/C,EAAGkD,EAAA,GAAEC,EAAMD,EAAA,GA6BZE,EAAW/C,IAAMC,OAAO,MAkB9B,OACIf,eAAA,OAAKlB,UAAU,YAAWC,SAAA,CACtBF,cAAA,OAAKC,UAAU,aAAYC,SACvBF,cAACiF,QAAK,CAACC,MAAON,OAAOO,WAAY9D,OAAQuD,OAAOC,YAAapC,IAAKuC,EAAS9E,SACvEF,cAACoF,QAAK,CAACnF,UAAU,eAAcC,SAC3BF,cAACyB,EAAQ,CAACxB,UAAU,QAAQuD,MAAOgB,EAAQ,GAAG3E,MAAOiE,UAAWU,EAAQ,GAAG3E,MACjE6D,MAAOc,EAAQ,GAAG3E,MAAO0D,UAAWiB,EAAQ,GAAG3E,MAC/C+D,SAAUY,EAAQ,GAAG3E,MAAO8D,WAAYa,EAAQ,GAAG3E,MAAQ,GAC3DoD,KAAMuB,EAAQ,GAAG3E,MAAO+B,IAAKA,UAKnDT,eAAA,OAAKlB,UAAU,WAAUC,SAAA,CACpBsE,EAAQa,KAAI,SAACC,EAAQC,GAClB,OAAQvF,cAACK,EAAO,CAERC,KAAMgF,EAAOhF,KACbC,OAAQgF,IAAUnB,EAClB5D,YAAa,WACT6D,EAAwBkB,EAC5B,GALKA,EAQjB,IACAvF,cAACW,EAAQ,CACLC,MAhDhB,SAA2BK,GACvB8D,EAAO9D,EACX,IAgDYjB,cAAA,UAAQC,UAAU,mBAAmBS,QArC5B,YARrB,SAAqB8E,EAAKlF,GACtB,IAAImF,EAAOC,SAASC,cAAc,KAClCF,EAAKG,SAAWtF,EAChBmF,EAAKI,KAAOL,EACZE,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QACLN,SAASI,KAAKG,YAAYR,EAC9B,CAQIS,CANYlB,EAAS5C,QAAQ+D,YAMZ,YACrB,EA6BuEjG,SAAC,sBAEhEF,cAACP,EAAM,CACHE,IAAK+E,EAAeT,MAAMtE,IAC1BC,IAAK8E,EAAeT,MAAMrE,IAC1BC,MAAO6E,EAAe7E,MACtBE,KAAM2E,EAAe3E,KACrBD,aA/EZ,SAA2BJ,GAAY,IAAV6B,EAAM7B,EAAN6B,OACzBkD,GAAW,SAAA2B,GACP,OAAOA,EAAYf,KAAI,SAACC,EAAQC,GAC5B,OAAIA,IAAUnB,EACHkB,EAEXe,wBAAA,GAAWf,GAAM,IAAEzF,MAAO0B,EAAO1B,OACrC,GACJ,GAGJ,MAwEJ,EClLAyG,IAASC,OACPvG,cAACiC,IAAMuE,WAAU,CAAAtG,SACfF,cAACmE,EAAG,MAENuB,SAASe,eAAe,Q","file":"static/js/main.0e13c830.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Slider({min, max, value, handleChange, step}) {\r\n    return (\r\n        <div className=\"slider-container\">\r\n            <input step={step} min={min} max={max} value={value} onChange={handleChange} type=\"range\"></input>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SideBar({name, active, handleClick}) {\r\n    return (\r\n        <button className={`sidebar-item ${active ? 'active' : ''}`} onClick={handleClick}>{name}</button>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function SetImage({onset}) {\r\n\r\n    const [url, setUrl] = useState('')\r\n\r\n    return (\r\n        <div className=\"set-image\" style={{height: '100%'}}>\r\n            <h4>Set Image:</h4>\r\n            <input type=\"url\" className=\"set-image-url\" onChange={(event) => setUrl(event.target.value)} placeholder=\"Paste Image URL Here\"/>\r\n            <button className=\"set-image-button\" onClick={() => onset(url)}>Set Image</button>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useRef, useEffect } from 'react'\r\n// import ReactDOMServer from 'react-dom/server'\r\n\r\n// import Image from './Image'\r\n\r\n\r\n\r\n// const Canvas = (props) => {\r\n\r\n\r\n//     const canvasRef = useRef(null)\r\n\r\n\r\n\r\n//     const jsxImage = ReactDOMServer.renderToStaticMarkup(<Image src={props.src} style={props.style} alt={props.alt} className={props.cssClass} />)\r\n//     const image = new DOMParser().parseFromString(jsxImage, \"text/xml\");\r\n\r\n\r\n//     useEffect(() => {\r\n//         const canvas = canvasRef.current\r\n//         const context = canvas.getContext('2d')\r\n\r\n//         console.log(image.firstChild)\r\n//         context.drawImage(image.firstChild, 0, 0, canvas.width, canvas.height);\r\n\r\n//         //Our first draw\r\n//         // context.fillStyle = '#000000'\r\n//         // context.fillRect(0, 0, context.canvas.width, context.canvas.height)\r\n//     }, [props, image])\r\n\r\n\r\n//     return <canvas ref={canvasRef} {...props} />\r\n// }\r\n\r\n// export default Canvas\r\n\r\nimport React from 'react';\r\nimport { Image } from 'react-konva';\r\nimport Konva from 'konva'\r\nimport useImage from 'use-image'\r\n\r\n// the first very simple and recommended way:\r\n\r\n// custom component that will handle loading image from url\r\n// you may add more logic here to handle \"loading\" state\r\n// or if loading is failed\r\n// VERY IMPORTANT NOTES:\r\n// at first we will set image state to null\r\n// and then we will set it to native image instance when it is loaded\r\n\r\n// example of functional component\r\nconst URLImage = (props) => {\r\n  const URL = props.src;\r\n  const [image] = useImage(URL, 'Anonimus');\r\n  const imageRef = React.useRef();\r\n\r\n  // when image is loaded we need to cache the shape\r\n  React.useEffect(() => {\r\n    if (image) {\r\n      // you many need to reapply cache on some props changes like shadow, stroke, etc.\r\n      imageRef.current.cache();\r\n      // since this update is not handled by \"react-konva\" and we are using Konva methods directly\r\n      // we have to redraw layer manually\r\n      imageRef.current.getLayer().batchDraw();\r\n    }\r\n  }, [image]);\r\n\r\n  return (\r\n    <Image\r\n      ref={imageRef}\r\n      x={10}\r\n      y={10}\r\n      image={image}\r\n      filters={[Konva.Filters.HSL, Konva.Filters.Pixelate ,Konva.Filters.Blur, Konva.Filters.Brighten, Konva.Filters.Contrast, Konva.Filters.Posterize, Konva.Filters.Noise]}\r\n      blurRadius={props.Blur}\r\n      luminance={props.luminance}\r\n      noise={props.noise}\r\n      pixelSize={props.pixel}\r\n      brightness={props.brightness}\r\n      contrast={props.contrast}\r\n      levels={props.posterize}\r\n\r\n    />\r\n  );\r\n};\r\n\r\n\r\nexport default URLImage;","import React, {useState} from 'react'\nimport './App.css'\nimport Slider from './Slider.js'\nimport SideBar from './SideBar'\nimport SetImage from './SetImage'\nimport URLImage from './URLImage'\nimport {Stage, Layer} from 'react-konva'\n\n\nconst DEFAULT_OPTIONS = [\n    {\n        name: \"Brightness\",\n        property: 'brightness',\n        value: 1,\n        range: {\n            min: 0,\n            max: 2\n        },\n        unit: '%',\n        step: 0.1\n    },\n    {\n        name: \"Contrast\",\n        property: 'contrast',\n        value: 10,\n        range: {\n            min: -20,\n            max: 20\n        },\n        unit: '%',\n        step: 0.5\n    },\n    {\n        name: \"Pixelate\",\n        property: 'pixel',\n        value: 0.1,\n        range: {\n            min: 0.1,\n            max: 10\n        },\n        unit: '%',\n        step: 0.1\n\n    },\n    {\n        name: \"Luminance\",\n        property: 'luminance',\n        value: 0,\n        range: {\n            min: -1,\n            max: 1\n        },\n        unit: '%',\n        step: 0.1\n\n    },\n    {\n        name: \"Posterize\",\n        property: 'posterize',\n        value: 0.1,\n        range: {\n            min: 0,\n            max: 0.1\n        },\n        unit: '%',\n        step: 0.01\n    },\n    {\n        name: \"Noise\",\n        property: 'noise',\n        value: 0,\n        range: {\n            min: 0,\n            max: 2\n        },\n        unit: 'deg',\n        step: 0.1\n    },\n    {\n        name: \"Blur\",\n        property: 'blur',\n        value: 0,\n        range: {\n            min: 0,\n            max: 20\n        },\n        unit: 'px',\n        step: 1\n    },\n]\n\n\nfunction App() {\n    const [selectedOptionsIndex, setSelectedOptionsIndex] = useState(0)\n    const [options, setOptions] = useState(DEFAULT_OPTIONS)\n    const selectedOption = options[selectedOptionsIndex]\n    const [src, setSrc] = useState(`https://picsum.photos/${1280}/${window.innerHeight}`)\n\n\n    function handleSliderChange({target}) {\n        setOptions(prevOptions => {\n            return prevOptions.map((option, index) => {\n                if (index !== selectedOptionsIndex) {\n                    return option\n                }\n                return {...option, value: target.value}\n            })\n        })\n\n\n    }\n\n    // function getImageStyle(params) {\n    //   const filters = options.map(option => {\n    //     return `${options.value}`\n    //   })\n\n    //   return {\"style\": {filter: filters.join(' ')}, blur: filters[6]}\n    // }\n\n\n    function onSetImageHandler(url) {\n        setSrc(url)\n    }\n\n    const stageRef = React.useRef(null);\n    function downloadURI(uri, name) {\n        let link = document.createElement('a');\n        link.download = name;\n        link.href = uri;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n    const handleExport = () => {\n        const uri = stageRef.current.toDataURL();\n        // window.open(uri, '_blank');\n        // we also can save uri as file\n        // but in the demo on Konva website it will not work\n        // because of iframe restrictions\n        // but feel free to use it in your apps:\n        downloadURI(uri, 'image.png');\n    };\n    return (\n        <div className=\"container\">\n            <div className=\"main-image\">\n                <Stage width={window.innerWidth} height={window.innerHeight} ref={stageRef} >\n                    <Layer className=\"image-parent\">\n                        <URLImage className=\"image\" noise={options[5].value} posterize={options[4].value}\n                                  pixel={options[2].value} luminance={options[3].value}\n                                  contrast={options[1].value} brightness={options[0].value / 10}\n                                  Blur={options[6].value} src={src}/>\n                    </Layer>\n                </Stage>\n            </div>\n\n            <div className=\"side-bar\">\n                {options.map((option, index) => {\n                    return (<SideBar\n                            key={index}\n                            name={option.name}\n                            active={index === selectedOptionsIndex}\n                            handleClick={() => {\n                                setSelectedOptionsIndex(index)\n                            }}\n                        />\n                    )\n                })}\n                <SetImage\n                    onset={onSetImageHandler}\n                />\n                <button className=\"set-image-button\" onClick={handleExport}>Download Image</button>\n            </div>\n            <Slider\n                min={selectedOption.range.min}\n                max={selectedOption.range.max}\n                value={selectedOption.value}\n                step={selectedOption.step}\n                handleChange={handleSliderChange}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}